import{_ as a,c as e,o as l,a6 as i}from"./chunks/framework.DZm5WilM.js";const b=JSON.parse('{"title":"流程引擎","description":"","frontmatter":{"title":"流程引擎"},"headers":[],"relativePath":"yvanui/06_flowdesign/01_index.md","filePath":"yvanui/06_flowdesign/01_index.md"}'),r={name:"yvanui/06_flowdesign/01_index.md"},t=i('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>流程引擎是专门用来处理 WMS 大型协作流程的框架特性。</p><p>流程引擎擅长解决：</p><ul><li>设备、接口、人员操作的流程很复杂；</li><li>某些流程（比如审批流）经常调整；</li></ul><p>工作流不适用于:</p><ul><li>如果工作节点之间需要频繁转换换数据，不适用；</li><li>不擅长细节性的流程描述，他带来的性能损耗甚至会得不偿失；</li><li>不擅长处理性能要求极高的场景；</li></ul><p>流程引擎是借助数据库完成的，使用工作流时，每个流程步骤可能都会存储进数据库，因此性能方面会有一定损耗（经测试 每秒事务总吞吐量&lt;=3000TPS）；</p><h1 id="架构设计" tabindex="-1">架构设计 <a class="header-anchor" href="#架构设计" aria-label="Permalink to &quot;架构设计&quot;">​</a></h1><h1 id="节点类型" tabindex="-1">节点类型 <a class="header-anchor" href="#节点类型" aria-label="Permalink to &quot;节点类型&quot;">​</a></h1><ul><li>系统接口</li><li>调用外部系统</li><li>排他网关</li><li>并行网关</li><li>内部方法</li><li>调试</li><li>打印</li><li>消息通知</li><li>SQL查询</li></ul><h1 id="节点类型-1" tabindex="-1">节点类型 <a class="header-anchor" href="#节点类型-1" aria-label="Permalink to &quot;节点类型&quot;">​</a></h1><h2 id="接口节点" tabindex="-1">接口节点 <a class="header-anchor" href="#接口节点" aria-label="Permalink to &quot;接口节点&quot;">​</a></h2><p>提供给外部系统（或界面）调用的节点，当调用此接口时，流程就会从此节点开始向后运行</p><p>属性</p><h3 id="url接口地址" tabindex="-1">URL接口地址 <a class="header-anchor" href="#url接口地址" aria-label="Permalink to &quot;URL接口地址&quot;">​</a></h3><h3 id="接口参数" tabindex="-1">接口参数 <a class="header-anchor" href="#接口参数" aria-label="Permalink to &quot;接口参数&quot;">​</a></h3><h3 id="relmodules-关联界面-可选项" tabindex="-1">relModules 关联界面(可选项) <a class="header-anchor" href="#relmodules-关联界面-可选项" aria-label="Permalink to &quot;relModules 关联界面(可选项)&quot;">​</a></h3><p>-- 填写功能模块路径，方便跳转</p><hr><h2 id="网关排他节点" tabindex="-1">网关排他节点 <a class="header-anchor" href="#网关排他节点" aria-label="Permalink to &quot;网关排他节点&quot;">​</a></h2><p>用来判断上下文数据，该类型的节点下游可以连接2条线段，一条是逻辑判断，判断条件写在线上，一条是不满足条件之后的</p><hr><h2 id="返回节点" tabindex="-1">返回节点 <a class="header-anchor" href="#返回节点" aria-label="Permalink to &quot;返回节点&quot;">​</a></h2><p>该节点用来添加方法返回值</p><hr><h2 id="过程节点" tabindex="-1">过程节点 <a class="header-anchor" href="#过程节点" aria-label="Permalink to &quot;过程节点&quot;">​</a></h2><p>该节点用来</p><h3 id="调用外部接口" tabindex="-1">调用外部接口 <a class="header-anchor" href="#调用外部接口" aria-label="Permalink to &quot;调用外部接口&quot;">​</a></h3>',28),o=[t];function h(n,d,s,u,c,_){return l(),e("div",null,o)}const q=a(r,[["render",h]]);export{b as __pageData,q as default};
